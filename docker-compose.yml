services:
    laravel.test:
        build:
            context: ./docker/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.4/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:8022'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - redis
            - pgsql
            - selenium
            - soketi
    nginx:
        image: nginx:latest
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - '.:/var/www/html'
            - './docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf'
            - 'certbot-etc:/etc/letsencrypt'
            - 'certbot-www:/var/www/certbot'
        depends_on:
            - laravel.test
        networks:
            - sail
    # certbot:
    #     image: certbot/certbot:latest
    #     volumes:
    #         - 'certbot-etc:/etc/letsencrypt'
    #         - 'certbot-www:/var/www/certbot'
    #         - '.:/var/www/html'
    #     entrypoint: /bin/sh
    #     command: /var/www/html/entrypoint-certbot.sh
    #     depends_on:
    #         - nginx
    #     networks:
    #         - sail
    certbot:
        image: certbot/certbot:latest
        volumes:
            - 'certbot-etc:/etc/letsencrypt'
            - 'certbot-www:/var/www/certbot'
            - '.:/var/www/html'
        command: certonly --webroot --webroot-path=/var/www/html/public -d united2.strangled.net --email tnebilyk@gmail.com --agree-tos --no-eff-email --non-interactive
        depends_on:
            - nginx
        networks:
            - sail
    redis:
        image: 'redis:alpine'
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    pgsql:
        image: 'postgres:17'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    selenium:
        image: selenium/standalone-chromium
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - '/dev/shm:/dev/shm'
        networks:
            - sail
    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        environment:
            SOKETI_DEBUG: '${SOKETI_DEBUG:-1}'
            SOKETI_METRICS_SERVER_PORT: '9601'
            SOKETI_DEFAULT_APP_ID: '${PUSHER_APP_ID}'
            SOKETI_DEFAULT_APP_KEY: '${PUSHER_APP_KEY}'
            SOKETI_DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET}'
        ports:
            - '${PUSHER_PORT:-6001}:6001'
            - '${PUSHER_METRICS_PORT:-9601}:9601'
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    certbot-etc:
    certbot-www:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-pgsql:
        driver: local
